package pe.gob.miraflores.mobile.domain.mapaincidencias;

import java.util.ArrayList;
import java.util.List;

public class MapaIncidenciasGeometriaCriteria {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table GEOMGEOMETRIA
     *
     * @mbggenerated Fri Oct 23 15:41:13 COT 2015
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table GEOMGEOMETRIA
     *
     * @mbggenerated Fri Oct 23 15:41:13 COT 2015
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table GEOMGEOMETRIA
     *
     * @mbggenerated Fri Oct 23 15:41:13 COT 2015
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table GEOMGEOMETRIA
     *
     * @mbggenerated Fri Oct 23 15:41:13 COT 2015
     */
    public MapaIncidenciasGeometriaCriteria() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table GEOMGEOMETRIA
     *
     * @mbggenerated Fri Oct 23 15:41:13 COT 2015
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table GEOMGEOMETRIA
     *
     * @mbggenerated Fri Oct 23 15:41:13 COT 2015
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table GEOMGEOMETRIA
     *
     * @mbggenerated Fri Oct 23 15:41:13 COT 2015
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table GEOMGEOMETRIA
     *
     * @mbggenerated Fri Oct 23 15:41:13 COT 2015
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table GEOMGEOMETRIA
     *
     * @mbggenerated Fri Oct 23 15:41:13 COT 2015
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table GEOMGEOMETRIA
     *
     * @mbggenerated Fri Oct 23 15:41:13 COT 2015
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table GEOMGEOMETRIA
     *
     * @mbggenerated Fri Oct 23 15:41:13 COT 2015
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table GEOMGEOMETRIA
     *
     * @mbggenerated Fri Oct 23 15:41:13 COT 2015
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table GEOMGEOMETRIA
     *
     * @mbggenerated Fri Oct 23 15:41:13 COT 2015
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table GEOMGEOMETRIA
     *
     * @mbggenerated Fri Oct 23 15:41:13 COT 2015
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table GEOMGEOMETRIA
     *
     * @mbggenerated Fri Oct 23 15:41:13 COT 2015
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andIdgeoreferenciaIsNull() {
            addCriterion("IDGEOREFERENCIA is null");
            return (Criteria) this;
        }

        public Criteria andIdgeoreferenciaIsNotNull() {
            addCriterion("IDGEOREFERENCIA is not null");
            return (Criteria) this;
        }

        public Criteria andIdgeoreferenciaEqualTo(Integer value) {
            addCriterion("IDGEOREFERENCIA =", value, "idgeoreferencia");
            return (Criteria) this;
        }

        public Criteria andIdgeoreferenciaNotEqualTo(Integer value) {
            addCriterion("IDGEOREFERENCIA <>", value, "idgeoreferencia");
            return (Criteria) this;
        }

        public Criteria andIdgeoreferenciaGreaterThan(Integer value) {
            addCriterion("IDGEOREFERENCIA >", value, "idgeoreferencia");
            return (Criteria) this;
        }

        public Criteria andIdgeoreferenciaGreaterThanOrEqualTo(Integer value) {
            addCriterion("IDGEOREFERENCIA >=", value, "idgeoreferencia");
            return (Criteria) this;
        }

        public Criteria andIdgeoreferenciaLessThan(Integer value) {
            addCriterion("IDGEOREFERENCIA <", value, "idgeoreferencia");
            return (Criteria) this;
        }

        public Criteria andIdgeoreferenciaLessThanOrEqualTo(Integer value) {
            addCriterion("IDGEOREFERENCIA <=", value, "idgeoreferencia");
            return (Criteria) this;
        }

        public Criteria andIdgeoreferenciaIn(List<Integer> values) {
            addCriterion("IDGEOREFERENCIA in", values, "idgeoreferencia");
            return (Criteria) this;
        }

        public Criteria andIdgeoreferenciaNotIn(List<Integer> values) {
            addCriterion("IDGEOREFERENCIA not in", values, "idgeoreferencia");
            return (Criteria) this;
        }

        public Criteria andIdgeoreferenciaBetween(Integer value1, Integer value2) {
            addCriterion("IDGEOREFERENCIA between", value1, value2, "idgeoreferencia");
            return (Criteria) this;
        }

        public Criteria andIdgeoreferenciaNotBetween(Integer value1, Integer value2) {
            addCriterion("IDGEOREFERENCIA not between", value1, value2, "idgeoreferencia");
            return (Criteria) this;
        }

        public Criteria andIdetipogeometriaIsNull() {
            addCriterion("IDETIPOGEOMETRIA is null");
            return (Criteria) this;
        }

        public Criteria andIdetipogeometriaIsNotNull() {
            addCriterion("IDETIPOGEOMETRIA is not null");
            return (Criteria) this;
        }

        public Criteria andIdetipogeometriaEqualTo(Integer value) {
            addCriterion("IDETIPOGEOMETRIA =", value, "idetipogeometria");
            return (Criteria) this;
        }

        public Criteria andIdetipogeometriaNotEqualTo(Integer value) {
            addCriterion("IDETIPOGEOMETRIA <>", value, "idetipogeometria");
            return (Criteria) this;
        }

        public Criteria andIdetipogeometriaGreaterThan(Integer value) {
            addCriterion("IDETIPOGEOMETRIA >", value, "idetipogeometria");
            return (Criteria) this;
        }

        public Criteria andIdetipogeometriaGreaterThanOrEqualTo(Integer value) {
            addCriterion("IDETIPOGEOMETRIA >=", value, "idetipogeometria");
            return (Criteria) this;
        }

        public Criteria andIdetipogeometriaLessThan(Integer value) {
            addCriterion("IDETIPOGEOMETRIA <", value, "idetipogeometria");
            return (Criteria) this;
        }

        public Criteria andIdetipogeometriaLessThanOrEqualTo(Integer value) {
            addCriterion("IDETIPOGEOMETRIA <=", value, "idetipogeometria");
            return (Criteria) this;
        }

        public Criteria andIdetipogeometriaIn(List<Integer> values) {
            addCriterion("IDETIPOGEOMETRIA in", values, "idetipogeometria");
            return (Criteria) this;
        }

        public Criteria andIdetipogeometriaNotIn(List<Integer> values) {
            addCriterion("IDETIPOGEOMETRIA not in", values, "idetipogeometria");
            return (Criteria) this;
        }

        public Criteria andIdetipogeometriaBetween(Integer value1, Integer value2) {
            addCriterion("IDETIPOGEOMETRIA between", value1, value2, "idetipogeometria");
            return (Criteria) this;
        }

        public Criteria andIdetipogeometriaNotBetween(Integer value1, Integer value2) {
            addCriterion("IDETIPOGEOMETRIA not between", value1, value2, "idetipogeometria");
            return (Criteria) this;
        }

        public Criteria andGeometriaIsNull() {
            addCriterion("GEOMETRIA is null");
            return (Criteria) this;
        }

        public Criteria andGeometriaIsNotNull() {
            addCriterion("GEOMETRIA is not null");
            return (Criteria) this;
        }

        public Criteria andGeometriaEqualTo(String value) {
            addCriterion("GEOMETRIA =", value, "geometria");
            return (Criteria) this;
        }

        public Criteria andGeometriaNotEqualTo(String value) {
            addCriterion("GEOMETRIA <>", value, "geometria");
            return (Criteria) this;
        }

        public Criteria andGeometriaGreaterThan(String value) {
            addCriterion("GEOMETRIA >", value, "geometria");
            return (Criteria) this;
        }

        public Criteria andGeometriaGreaterThanOrEqualTo(String value) {
            addCriterion("GEOMETRIA >=", value, "geometria");
            return (Criteria) this;
        }

        public Criteria andGeometriaLessThan(String value) {
            addCriterion("GEOMETRIA <", value, "geometria");
            return (Criteria) this;
        }

        public Criteria andGeometriaLessThanOrEqualTo(String value) {
            addCriterion("GEOMETRIA <=", value, "geometria");
            return (Criteria) this;
        }

        public Criteria andGeometriaLike(String value) {
            addCriterion("GEOMETRIA like", value, "geometria");
            return (Criteria) this;
        }

        public Criteria andGeometriaNotLike(String value) {
            addCriterion("GEOMETRIA not like", value, "geometria");
            return (Criteria) this;
        }

        public Criteria andGeometriaIn(List<String> values) {
            addCriterion("GEOMETRIA in", values, "geometria");
            return (Criteria) this;
        }

        public Criteria andGeometriaNotIn(List<String> values) {
            addCriterion("GEOMETRIA not in", values, "geometria");
            return (Criteria) this;
        }

        public Criteria andGeometriaBetween(String value1, String value2) {
            addCriterion("GEOMETRIA between", value1, value2, "geometria");
            return (Criteria) this;
        }

        public Criteria andGeometriaNotBetween(String value1, String value2) {
            addCriterion("GEOMETRIA not between", value1, value2, "geometria");
            return (Criteria) this;
        }

        public Criteria andIdecodvalorIsNull() {
            addCriterion("IDECODVALOR is null");
            return (Criteria) this;
        }

        public Criteria andIdecodvalorIsNotNull() {
            addCriterion("IDECODVALOR is not null");
            return (Criteria) this;
        }

        public Criteria andIdecodvalorEqualTo(Integer value) {
            addCriterion("IDECODVALOR =", value, "idecodvalor");
            return (Criteria) this;
        }

        public Criteria andIdecodvalorNotEqualTo(Integer value) {
            addCriterion("IDECODVALOR <>", value, "idecodvalor");
            return (Criteria) this;
        }

        public Criteria andIdecodvalorGreaterThan(Integer value) {
            addCriterion("IDECODVALOR >", value, "idecodvalor");
            return (Criteria) this;
        }

        public Criteria andIdecodvalorGreaterThanOrEqualTo(Integer value) {
            addCriterion("IDECODVALOR >=", value, "idecodvalor");
            return (Criteria) this;
        }

        public Criteria andIdecodvalorLessThan(Integer value) {
            addCriterion("IDECODVALOR <", value, "idecodvalor");
            return (Criteria) this;
        }

        public Criteria andIdecodvalorLessThanOrEqualTo(Integer value) {
            addCriterion("IDECODVALOR <=", value, "idecodvalor");
            return (Criteria) this;
        }

        public Criteria andIdecodvalorIn(List<Integer> values) {
            addCriterion("IDECODVALOR in", values, "idecodvalor");
            return (Criteria) this;
        }

        public Criteria andIdecodvalorNotIn(List<Integer> values) {
            addCriterion("IDECODVALOR not in", values, "idecodvalor");
            return (Criteria) this;
        }

        public Criteria andIdecodvalorBetween(Integer value1, Integer value2) {
            addCriterion("IDECODVALOR between", value1, value2, "idecodvalor");
            return (Criteria) this;
        }

        public Criteria andIdecodvalorNotBetween(Integer value1, Integer value2) {
            addCriterion("IDECODVALOR not between", value1, value2, "idecodvalor");
            return (Criteria) this;
        }

        public Criteria andIdecodidentIsNull() {
            addCriterion("IDECODIDENT is null");
            return (Criteria) this;
        }

        public Criteria andIdecodidentIsNotNull() {
            addCriterion("IDECODIDENT is not null");
            return (Criteria) this;
        }

        public Criteria andIdecodidentEqualTo(Integer value) {
            addCriterion("IDECODIDENT =", value, "idecodident");
            return (Criteria) this;
        }

        public Criteria andIdecodidentNotEqualTo(Integer value) {
            addCriterion("IDECODIDENT <>", value, "idecodident");
            return (Criteria) this;
        }

        public Criteria andIdecodidentGreaterThan(Integer value) {
            addCriterion("IDECODIDENT >", value, "idecodident");
            return (Criteria) this;
        }

        public Criteria andIdecodidentGreaterThanOrEqualTo(Integer value) {
            addCriterion("IDECODIDENT >=", value, "idecodident");
            return (Criteria) this;
        }

        public Criteria andIdecodidentLessThan(Integer value) {
            addCriterion("IDECODIDENT <", value, "idecodident");
            return (Criteria) this;
        }

        public Criteria andIdecodidentLessThanOrEqualTo(Integer value) {
            addCriterion("IDECODIDENT <=", value, "idecodident");
            return (Criteria) this;
        }

        public Criteria andIdecodidentIn(List<Integer> values) {
            addCriterion("IDECODIDENT in", values, "idecodident");
            return (Criteria) this;
        }

        public Criteria andIdecodidentNotIn(List<Integer> values) {
            addCriterion("IDECODIDENT not in", values, "idecodident");
            return (Criteria) this;
        }

        public Criteria andIdecodidentBetween(Integer value1, Integer value2) {
            addCriterion("IDECODIDENT between", value1, value2, "idecodident");
            return (Criteria) this;
        }

        public Criteria andIdecodidentNotBetween(Integer value1, Integer value2) {
            addCriterion("IDECODIDENT not between", value1, value2, "idecodident");
            return (Criteria) this;
        }

        public Criteria andIndestadoIsNull() {
            addCriterion("INDESTADO is null");
            return (Criteria) this;
        }

        public Criteria andIndestadoIsNotNull() {
            addCriterion("INDESTADO is not null");
            return (Criteria) this;
        }

        public Criteria andIndestadoEqualTo(Integer value) {
            addCriterion("INDESTADO =", value, "indestado");
            return (Criteria) this;
        }

        public Criteria andIndestadoNotEqualTo(Integer value) {
            addCriterion("INDESTADO <>", value, "indestado");
            return (Criteria) this;
        }

        public Criteria andIndestadoGreaterThan(Integer value) {
            addCriterion("INDESTADO >", value, "indestado");
            return (Criteria) this;
        }

        public Criteria andIndestadoGreaterThanOrEqualTo(Integer value) {
            addCriterion("INDESTADO >=", value, "indestado");
            return (Criteria) this;
        }

        public Criteria andIndestadoLessThan(Integer value) {
            addCriterion("INDESTADO <", value, "indestado");
            return (Criteria) this;
        }

        public Criteria andIndestadoLessThanOrEqualTo(Integer value) {
            addCriterion("INDESTADO <=", value, "indestado");
            return (Criteria) this;
        }

        public Criteria andIndestadoIn(List<Integer> values) {
            addCriterion("INDESTADO in", values, "indestado");
            return (Criteria) this;
        }

        public Criteria andIndestadoNotIn(List<Integer> values) {
            addCriterion("INDESTADO not in", values, "indestado");
            return (Criteria) this;
        }

        public Criteria andIndestadoBetween(Integer value1, Integer value2) {
            addCriterion("INDESTADO between", value1, value2, "indestado");
            return (Criteria) this;
        }

        public Criteria andIndestadoNotBetween(Integer value1, Integer value2) {
            addCriterion("INDESTADO not between", value1, value2, "indestado");
            return (Criteria) this;
        }

        public Criteria andDesdireccionIsNull() {
            addCriterion("DESDIRECCION is null");
            return (Criteria) this;
        }

        public Criteria andDesdireccionIsNotNull() {
            addCriterion("DESDIRECCION is not null");
            return (Criteria) this;
        }

        public Criteria andDesdireccionEqualTo(String value) {
            addCriterion("DESDIRECCION =", value, "desdireccion");
            return (Criteria) this;
        }

        public Criteria andDesdireccionNotEqualTo(String value) {
            addCriterion("DESDIRECCION <>", value, "desdireccion");
            return (Criteria) this;
        }

        public Criteria andDesdireccionGreaterThan(String value) {
            addCriterion("DESDIRECCION >", value, "desdireccion");
            return (Criteria) this;
        }

        public Criteria andDesdireccionGreaterThanOrEqualTo(String value) {
            addCriterion("DESDIRECCION >=", value, "desdireccion");
            return (Criteria) this;
        }

        public Criteria andDesdireccionLessThan(String value) {
            addCriterion("DESDIRECCION <", value, "desdireccion");
            return (Criteria) this;
        }

        public Criteria andDesdireccionLessThanOrEqualTo(String value) {
            addCriterion("DESDIRECCION <=", value, "desdireccion");
            return (Criteria) this;
        }

        public Criteria andDesdireccionLike(String value) {
            addCriterion("DESDIRECCION like", value, "desdireccion");
            return (Criteria) this;
        }

        public Criteria andDesdireccionNotLike(String value) {
            addCriterion("DESDIRECCION not like", value, "desdireccion");
            return (Criteria) this;
        }

        public Criteria andDesdireccionIn(List<String> values) {
            addCriterion("DESDIRECCION in", values, "desdireccion");
            return (Criteria) this;
        }

        public Criteria andDesdireccionNotIn(List<String> values) {
            addCriterion("DESDIRECCION not in", values, "desdireccion");
            return (Criteria) this;
        }

        public Criteria andDesdireccionBetween(String value1, String value2) {
            addCriterion("DESDIRECCION between", value1, value2, "desdireccion");
            return (Criteria) this;
        }

        public Criteria andDesdireccionNotBetween(String value1, String value2) {
            addCriterion("DESDIRECCION not between", value1, value2, "desdireccion");
            return (Criteria) this;
        }

        public Criteria andOrdenIsNull() {
            addCriterion("ORDEN is null");
            return (Criteria) this;
        }

        public Criteria andOrdenIsNotNull() {
            addCriterion("ORDEN is not null");
            return (Criteria) this;
        }

        public Criteria andOrdenEqualTo(Integer value) {
            addCriterion("ORDEN =", value, "orden");
            return (Criteria) this;
        }

        public Criteria andOrdenNotEqualTo(Integer value) {
            addCriterion("ORDEN <>", value, "orden");
            return (Criteria) this;
        }

        public Criteria andOrdenGreaterThan(Integer value) {
            addCriterion("ORDEN >", value, "orden");
            return (Criteria) this;
        }

        public Criteria andOrdenGreaterThanOrEqualTo(Integer value) {
            addCriterion("ORDEN >=", value, "orden");
            return (Criteria) this;
        }

        public Criteria andOrdenLessThan(Integer value) {
            addCriterion("ORDEN <", value, "orden");
            return (Criteria) this;
        }

        public Criteria andOrdenLessThanOrEqualTo(Integer value) {
            addCriterion("ORDEN <=", value, "orden");
            return (Criteria) this;
        }

        public Criteria andOrdenIn(List<Integer> values) {
            addCriterion("ORDEN in", values, "orden");
            return (Criteria) this;
        }

        public Criteria andOrdenNotIn(List<Integer> values) {
            addCriterion("ORDEN not in", values, "orden");
            return (Criteria) this;
        }

        public Criteria andOrdenBetween(Integer value1, Integer value2) {
            addCriterion("ORDEN between", value1, value2, "orden");
            return (Criteria) this;
        }

        public Criteria andOrdenNotBetween(Integer value1, Integer value2) {
            addCriterion("ORDEN not between", value1, value2, "orden");
            return (Criteria) this;
        }

        public Criteria andGeometriaLikeInsensitive(String value) {
            addCriterion("upper(GEOMETRIA) like", value.toUpperCase(), "geometria");
            return (Criteria) this;
        }

        public Criteria andDesdireccionLikeInsensitive(String value) {
            addCriterion("upper(DESDIRECCION) like", value.toUpperCase(), "desdireccion");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table GEOMGEOMETRIA
     *
     * @mbggenerated do_not_delete_during_merge Fri Oct 23 15:41:13 COT 2015
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table GEOMGEOMETRIA
     *
     * @mbggenerated Fri Oct 23 15:41:13 COT 2015
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}